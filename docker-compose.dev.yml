services:
  postgres:
    image: postgres:17-alpine
    container_name: postgres
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: auth
    volumes:
      - data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: pass

  auth_service:
    build: ./services/auth
    container_name: auth_service
    restart: always
    ports:
      - "5000:5000"
    environment:
      JWT_SECRET: yuasidjoPSICUAYDSICAWETDUYAGH
      DATABASE_URL: postgresql+asyncpg://admin:pass@postgres:5432/auth
      RABBITMQ_URL: amqp://admin:pass@rabbitmq:5672
    depends_on:
      - postgres
      - rabbitmq
      - gateway_service

  gateway_service:
    build: ./services/gateway
    container_name: gateway_service
    restart: always
    ports:
      - "8000:8000"
    environment:
      AUTH_URL: http://auth_service:5000
      MEDIA_URL: http://media_service:7000

  notification_service:
    build: ./services/notification
    container_name: notification_service
    restart: always
    ports:
      - "6000:6000"
    env_file:
      - ./services/notification/.env

  media_service:
    build: ./services/media
    container_name: media_service
    restart: always
    ports:
      - "7000:7000"
    environment:
      RABBITMQ_URL: amqp://admin:pass@rabbitmq:5672
      MONGODB_URL: mongodb://admin:pass@mongo:27017/?authSource=admin
      AUTH_URL: http://auth_service:5000
    depends_on:
      - rabbitmq
      - mongo

  convertor_service:
    build: ./services/convertor
    container_name: convertor_service
    restart: always
    ports:
      - "4000:4000"
    environment:
      RABBITMQ_URL: amqp://admin:pass@rabbitmq:5672
      MONGODB_URL: mongodb://admin:pass@mongo:27017/?authSource=admin
    depends_on:
      - rabbitmq
      - mongo

  mongo:
    image: mongo:6.0.3
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo # connect to the mongo service
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin # same as mongo root user
      ME_CONFIG_MONGODB_ADMINPASSWORD: pass
      ME_CONFIG_BASICAUTH_USERNAME: admin # optional (UI login for mongo-express)
      ME_CONFIG_BASICAUTH_PASSWORD: pass
    volumes:
      - mongodata:/data/db

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: pass
    depends_on:
      - mongo

volumes:
  mongodata:
  data:

networks:
  main:
    driver: bridge
